#root{
  max-width: 1280px;
  margin: 0 auto;
  font-size: 19px;
  padding: 2rem;
}
body{
  font-family: "VT323", monospace;
  background: url("/public/img/fondo.jpg");
  background-repeat: no-repeat;
  background-size: cover;
  // background-attachment: scroll;
  min-height: 100vh;
}

thead td{
  cursor: pointer;
}

// vista juego
#juego-container{
  min-width: 40rem;
}

section.vista-juego{
  max-width: 70rem;
  margin: 0 auto;
}
section.vista{
  margin-top: 5rem !important;
  max-width: 70rem;
  margin: 0 auto;
}

#celdas{
  height: 2.2rem;
  width: 10px;
}

// Criterios de Aceptaci√≥n ‚úÖ

//     Puntuaci√≥n:
//         Incrementar 10 puntos por movimiento a la derecha, izquierda o abajo.
//         A√±adir 20 puntos cuando la pieza gira.
//         A√±adir 50 puntos cuando la pieza llega al suelo.

//     Guardar Partida:
//         Finalizar la partida cuando la pieza llega al suelo y mostrar la opci√≥n de guardado.
//         Utilizar la funci√≥n registraPartida() para guardar la partida.
//         Utilizar el formulario de la vista Partidas para recopilar la informaci√≥n.
//         Despu√©s de guardar, mostrar la vista de Partidas Jugadas.

//     Vista Ranking:
//         Crear la vista Ranking que muestre a los mejores jugadores.


// Tareas üìå

//     Tarea 1: Implementar el sistema de puntuaci√≥n seg√∫n las acciones.
//     Tarea 2: Modificar el flujo del juego para finalizar la partida cuando sea necesario.
//     Tarea 3: Crear la funcionalidad para guardar la partida con registraPartida().
//     Tarea 4: Reutilizar el formulario de la vista Partidas para guardar los datos.
//     Tarea 5: Despu√©s de guardar, redirigir a la vista Partidas.
//     Tarea 6: Desarrollar la vista Ranking con la lista de los mejores jugadores.
